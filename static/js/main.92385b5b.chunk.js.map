{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","ErrorBoundary.js","containers/App.js","index.js"],"names":["Scroll","props","style","overflow","border","height","children","Card","img","name","username","email","search","className","width","backgroundColor","src","alt","CardList","robots","map","robo","id","SearchBox","ErrorBoundary","state","error","info","this","setState","React","Component","App","useState","setSearch","setRobots","useEffect","console","log","fetch","then","response","json","users","classsName","type","value","onChange","e","target","placeholder","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMASeA,EATA,SAACC,GACZ,OAEI,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACMJ,EAAMK,YCaLC,MAff,YAAiD,IAAlCC,EAAiC,EAAjCA,IAAIC,EAA6B,EAA7BA,KAAKC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,MAC/B,OAD8C,EAATC,OAEnC,sBAAKC,UAAU,oCAAoCX,MAAO,CAACY,MAAO,SAAlE,UACE,qBAAKD,UAAU,eAAeX,MAAO,CAACa,gBAAgB,cAAeC,IAAKR,EAAKS,IAAI,SACnF,sBAAKJ,UAAU,YAAf,UACI,mBAAGA,UAAU,aAAb,SAA2BJ,IAC3B,mBAAGI,UAAU,YAAb,SAA0BH,IAC1B,mBAAGG,UAAU,YAAb,SAA0BF,WCIrBO,EAZE,SAAC,GAAqB,IAApBN,EAAmB,EAAnBA,OAAOO,EAAY,EAAZA,OAKtB,OACI,8BACU,KAATP,GAAeO,EAAOC,KAAI,SAACC,GAAS,OAAO,cAAC,EAAD,CAAoBb,IAAG,+BAA0Ba,EAAKC,IAAMb,KAAMY,EAAKZ,KAAMC,SAAUW,EAAKX,SAAUC,MAAOU,EAAKV,OAAvGU,EAAKC,UCOrDC,G,YAdG,SAAC,GAAqB,IAApBX,EAAmB,EAAnBA,OAAOO,EAAY,EAAZA,OACvB,OACI,8BACU,KAATP,GAAeO,EAAOC,KAAI,SAACC,GACxB,GAAGA,EAAKX,WAAWE,EAEnB,OAAO,cAAC,EAAD,CAAoBJ,IAAG,+BAA0Ba,EAAKC,IAAMb,KAAMY,EAAKZ,KAAMC,SAAUW,EAAKX,SAAUC,MAAOU,EAAKV,OAAvGU,EAAKC,W,8BCmBpBE,E,kDAtBX,WAAYvB,GACX,IAAD,8BACI,cAAMA,IACDwB,MAAM,CAACC,OAAM,GAFtB,E,qDAIA,SAAkBA,EAAMC,GAEpBC,KAAKC,SAAS,CAACH,OAAM,M,oBAEzB,WAEI,OAAGE,KAAKH,MAAMC,MAEH,wCAGAE,KAAK3B,MAAMK,a,GAlBFwB,IAAMC,WCgDnBC,MAzCf,WACE,MAAyBC,mBAAS,IAAlC,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAAyBD,mBAAS,IAAlC,mBAAOd,EAAP,KAAcgB,EAAd,KAUA,OARAC,qBAAU,WAERC,QAAQC,IAAI,aACZC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAQR,EAAUQ,QACxB,IAGA,sBAAK9B,UAAU,MAAf,UAEY,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,MAAd,0BACA,uBACA,uBAAO+B,WAAW,oBAAoB1C,MAAO,CAACY,MAAM,OAAQ+B,KAAK,OAAOC,MAAOlC,EAAQmC,SAAU,SAACC,GAAD,OAAKd,EAAUc,EAAEC,OAAOH,QAC/HI,YAAY,mBAEN,uBACF,qBAAKrC,UAAU,aACbM,EAAOgC,OAAO,EAChB,mCACA,cAAC,EAAD,UACE,eAAC,EAAD,WACF,cAAC,EAAD,CAAWhC,OAAQA,EAAQP,OAAQA,IACnC,cAAC,EAAD,CAAUO,OAAQA,EAAQP,OAAQA,WAIlC,4CAECyB,QAAQC,IAAI,cCtC3Bc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.92385b5b.chunk.js","sourcesContent":["const Scroll = (props) => {\n    return ( \n\n        <div style={{overflow:\"scroll\",border:\"5px solid black\",height:\"700px\"}}>\n             {props.children}\n        </div>\n     );\n}\n \nexport default Scroll;\n\n","import React from \"react\"\n\nfunction Card({img,name,username,email,search}) {\n  return (\n    <div className=\"card align d-inline-flex addscale\" style={{width: \"18rem\"}}>\n      <img className=\"card-img-top\" style={{backgroundColor:\"lightgreen\"}} src={img} alt=\"robo\"/>\n      <div className=\"card-body\">\n          <p className=\"card-title\">{name}</p>\n          <p className=\"card-text\">{username}</p>\n          <p className=\"card-text\">{email}</p>\n      </div>\n      \n\n    </div>\n  );\n}\n\nexport default Card;\n","import Card from \"./Card\";\nconst CardList = ({search,robots}) => {\n   // if (true)//to check error boundary\n    //{\n      //  throw new Error('Noo');\n   // }\n    return (  \n        <div>\n        {search==='' && robots.map((robo)=> {return <Card key={robo.id} img={`https://robohash.org/${robo.id}`} name={robo.name} username={robo.username} email={robo.email}></Card>})}\n        </div>\n    );\n}\n \nexport default CardList;","import Card from \"./Card\";\nconst SearchBox = ({search,robots}) => {\n    return ( \n        <div>\n        {search!=='' && robots.map((robo)=> {\n            if(robo.username===search)\n            \n            return <Card key={robo.id} img={`https://robohash.org/${robo.id}`} name={robo.name} username={robo.username} email={robo.email}></Card>\n            \n          \n          })}\n          </div>\n     );\n}\n \nexport default SearchBox;\n \n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component\n {\n    constructor(props)\n    {\n        super(props)\n        this.state={error:false}\n    }\n    componentDidCatch(error,info)\n    {\n        this.setState({error:true})\n    }\n    render()\n    {\n        if(this.state.error)\n        {\n            return <h1>Ooppss</h1>\n        }\n        else{\n            return this.props.children\n        }\n    \n    }\n}\n \nexport default ErrorBoundary;","import React,{useState} from \"react\";\nimport { useEffect } from \"react\";\n//import {robots} from \"./robots.js\";\nimport Scroll from \"../components/Scroll.js\";\nimport CardList from \"../components/CardList.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport SearchBox from \"../components/SearchBox.js\";\nimport ErrorBoundary from \"../ErrorBoundary.js\";\nfunction App() {\n  const [search,setSearch]=useState('');\n  const [robots,setRobots]=useState([]);\n   \n  useEffect(()=> //works like componentDidMount and componentDidUpdate here it is for Didmount as we are not setting dependencies for checking updates\n  {\n    console.log(\"useEffect\");\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>{setRobots(users)});\n  },[])\n\n  return (\n    <div className=\"App\">\n     \n                <div className=\"container\"> \n                <h1 className=\"row\">RoBo Friends</h1>\n                <br></br>\n                <input classsName=\"row sticky-sm-top\" style={{width:\"30%\"}} type=\"text\" value={search} onChange={(e)=>setSearch(e.target.value)}\n          placeholder=\"Search RoBo\"/>\n                </div>\n                <br></br>\n              <div className=\"row robo\"></div> \n              { robots.length>0 ?\n              <>\n              <Scroll>\n                <ErrorBoundary>\n              <SearchBox robots={robots} search={search}/>\n              <CardList robots={robots} search={search}/>\n              </ErrorBoundary>\n              </Scroll>\n              </> :\n              <h1>Loading...</h1>\n              }\n              {console.log(\"render\")}\n     \n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}